package game.forum;

import game.data.ServidorDados;
import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MenuItem.OnMenuItemClickListener;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.MediaController;
import android.widget.Toast;
import android.widget.VideoView;

//Melhorar visualização de vídeos
//Por videos Full Screen
//Mostrar opção de visualizar o próximo vídeo ou o anterior
//Mostrar índice do vídeo sendo mostrado
public class JogoVideosActivity extends Activity {

	private VideoView videoView;
	private String jogoIndex;
	private int i = 0;
	private String[] urlVideos;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.videos);
		videoView = (VideoView) findViewById(R.id.videoView);

		Intent intent = getIntent();
		jogoIndex = intent.getStringExtra(JogoPerfilActivity.JOGO);
		if (jogoIndex == null || jogoIndex.equals("")) {
			Toast.makeText(this,
					"Houve um problema, por favor, retorne à página anterior",
					Toast.LENGTH_SHORT);
		} else {
			urlVideos = ServidorDados.getVideosDeJogo(jogoIndex);
			MediaController mediaController = new MediaController(this);
			mediaController.setAnchorView(videoView);
			Uri video = Uri.parse(urlVideos[i]);
			videoView.setMediaController(mediaController);
			videoView.setVideoURI(video);
			videoView.start();
			videoView.setOnTouchListener(new OnTouchListener() {

				@Override
				public boolean onTouch(View v, MotionEvent event) {
					if (event.getAction() == MotionEvent.ACTION_MOVE) {
						++i;
						if (i >= urlVideos.length) {
							i = 0;
						}
						Uri video = Uri.parse(urlVideos[i]);
						videoView.stopPlayback();
						videoView.setVideoURI(video);
						videoView.start();
					}
					return true;
				}
			});
		}
	}

	public boolean onCreateOptionsMenu(Menu menu) {
		MenuItem menuRequisitos = menu.add("Requisitos");
		MenuItem menuImagens = menu.add("Imagens");
		MenuItem menuSobre = menu.add("Sobre o jogo");
		MenuItem menuPesquisa = menu.add("Pesquisa");
		MenuItem menuSalvarVideo = menu.add("Salvar video");
		
		menuSalvarVideo.setOnMenuItemClickListener(new OnMenuItemClickListener() {
			
			@Override
			public boolean onMenuItemClick(MenuItem item) {
				
				
				
				
				
				
				
			}
		})

		menuSobre.setOnMenuItemClickListener(new OnMenuItemClickListener() {

			@Override
			public boolean onMenuItemClick(MenuItem item) {
				Intent intent = new Intent(getApplicationContext(),
						JogoSobreActivity.class);
				intent.putExtra(JogoPerfilActivity.JOGO, jogoIndex);
				startActivity(intent);
				return true;
			}
		});

		menuImagens.setOnMenuItemClickListener(new OnMenuItemClickListener() {

			@Override
			public boolean onMenuItemClick(MenuItem item) {
				Intent intent = new Intent(getApplicationContext(),
						JogoImagensActivity.class);
				intent.putExtra(JogoPerfilActivity.JOGO, jogoIndex);
				startActivity(intent);
				return true;
			}
		});

		menuRequisitos
				.setOnMenuItemClickListener(new OnMenuItemClickListener() {

					@Override
					public boolean onMenuItemClick(MenuItem item) {
						Intent intent = new Intent(getApplicationContext(),
								RequisitosSistemaActivity.class);
						intent.putExtra(JogoPerfilActivity.JOGO, jogoIndex);
						startActivity(intent);
						return true;
					}
				});

		menuPesquisa.setOnMenuItemClickListener(new OnMenuItemClickListener() {

			@Override
			public boolean onMenuItemClick(MenuItem item) {
				Intent intent = new Intent(getApplicationContext(),
						GameForumActivity.class);
				intent.putExtra(JogoPerfilActivity.JOGO, jogoIndex);
				startActivity(intent);
				return true;
			}
		});
		return true;
	}

}
