// @(#)$Id: Person.java 1199 2009-02-17 19:42:32Z smshaner $

// Copyright (C) 2003 Iowa State University

// This file is part of JML

// JML is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.

// JML is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with JML; see the file COPYING.  If not, write to
// the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.


package org.jmlspecs.samples.jmltutorial;

public class Person implements Cloneable {
	private /*@ spec_public non_null @*/String name;
	private /*@ spec_public @*/int weight;

    //@ requires n != null && !n.equals("");
    //@ assignable name;
	//@ assignable weight;
    //@ ensures n.equals(name) && weight == 0;
	public Person(String n) {
		name = n; weight = 0;
	}

  /*@ also
    @ ensures \result != null
    @   && (* \result is a displayable
    @       form of this person *);
    @*/
	//@ also
	//@ ensures \result != null;
	public /*@ pure @*/ String toString() {
		return "Person(\"" + name + "\","
		+ weight + ")";
	}

	//@ ensures \result == weight;
	public /*@ pure @*/ int getWeight() {
		return weight;
	}

  
 /* @ requires kgs >= 0;
    @ requires weight + kgs >= 0;
    @ ensures weight == \old(weight + kgs);
    @*/
	public void addKgs(int kgs) {
		if (kgs >= 0) {
			weight += kgs;
		} else {
			throw new IllegalArgumentException();
		}
	}
	
	/* @ requires kgs >= 0;
	 * @ requires weight - kgs >= 0;
	 * @ ensures weight == \old(weight - kgs); 
	 */
	public void subKgs(int kgs)
	{
		if(weight - kgs >= 0)
		{
			weight -= kgs;
		} 
		else
		{
			throw new IllegalArgumentException();
		}
	}
	
	
	/* @ requires name != null && !name.equals("");
	 * @ ensures true;
	 * @ signals (IllegalArgumentException i)
	 * @ 	name == null || name.equals("") &&
	 * @ 	name == \old(name) &&
	 * @ 	i.getMessage() == "nome incorreto";
	 */
	public void rename(String newName) throws IllegalArgumentException
	{
		if(newName == null || newName.isEmpty())
		{
			throw new IllegalArgumentException("nome incorreto");
		}
		
		name = newName;
		
	}
	
	
	
	/* @ requires name != null && !name.equals("");
	 * @ ensures \result.name == name && weight == \result.weight 
	 */
	public Object clone()
	{
		Person p = new Person(name);
		p.addKgs(weight);
		return p;
	}
}
