package senha.core;

public class Jogo {

	private Adivinho adivinho;
	private FornecedorDaSenha fornecedorDaSenha;
	private Senha senha;

	public Jogo() {
		adivinho = new Adivinho();
		fornecedorDaSenha = new FornecedorDaSenha();
		senha = new Senha();
	}

	public Jogador getAdivinho() {
		return adivinho;
	}

	public void setAdivinho(Adivinho adivinho) {
		this.adivinho = adivinho;
	}

	public Jogador getFornecedorDaSenha() {
		return fornecedorDaSenha;
	}

	public void setFornecedorDaSenha(FornecedorDaSenha fornecedorDaSenha) {
		this.fornecedorDaSenha = fornecedorDaSenha;
	}

	public Senha getSenha() {
		return senha;
	}

	public void setSenha(Senha senha) {
		this.senha = senha;
	}

	public String iniciarJogo() throws QuantidadePinosException {
		fornecedorDaSenha.gerarNovaSenha();
		senha = fornecedorDaSenha.getSenha();
		for (int i = 0; i < 10; ++i) {
			Tentativa t = new Tentativa();
			System.out.println("\nJogada " + (i + 1));
			try {
				t = adivinho.lerTentativa(System.in);
				int resultado = processarPartida(t, senha);
				if (resultado == 4) {
					return ("Parabéns! Você ganhou!");
				}
			} catch (PinoInvalidoException p) {
				System.out.println(p.getMessage());
				--i;
			} catch (PinoJaExisteException p) {
				System.out.println(p.getMessage());
				--i;
			}
		}
		return ("Você perdeu!");
	}

	public int processarPartida(Tentativa t, Senha senha) {
		Jogada j = new Jogada(t);
		j.calcularRetorno(senha);
		Retorno r = j.getSitRetorno();
		int resultado = r.printRetorno();
		return resultado;
	}
}
